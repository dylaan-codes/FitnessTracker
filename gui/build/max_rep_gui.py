# This GUI layout was generated by the Tkinter Designer by Parth Jadhav
# https://github.com/ParthJadhav/Tkinter-Designer
# GUI design and code by Dylan Nguyen
from FitnessTracker.my_functions import *
from FitnessTracker.my_validations import *
from pathlib import Path

# from tkinter import *
# Explicit imports to satisfy Flake8
from tkinter import Tk, Canvas, Entry, Text, Button, PhotoImage

OUTPUT_PATH = Path(__file__).parent
ASSETS_PATH = OUTPUT_PATH / Path("assets/frame2")


def relative_to_assets(path: str) -> Path:
    return ASSETS_PATH / Path(path)


reps_window = Tk()

reps_window.geometry("800x600")
reps_window.configure(bg="#FFFFFF")
vcmd = get_vcmd(reps_window)

canvas = Canvas(
    reps_window,
    bg="#FFFFFF",
    height=600,
    width=800,
    bd=0,
    highlightthickness=0,
    relief="ridge"
)

canvas.create_rectangle(
    400.0,
    0.0,
    800.0,
    600.0,
    fill="#395271",
    outline=""
)

image_image_1 = PhotoImage(
    file=relative_to_assets("image_1.png"))
image_1 = canvas.create_image(
    200.0,
    300.0,
    image=image_image_1
)

canvas.create_text(
    432.0,
    11.0,
    anchor="nw",
    text="Max Reps Input \nForm",
    fill="#FFFFFF",
    font=("Inter Bold", 36 * -1)
)

canvas.create_text(
    432.0,
    107.0,
    anchor="nw",
    text="Week",
    fill="#FFFFFF",
    font=("Inter Medium", 20 * -1)
)

canvas.create_text(
    624.0,
    107.0,
    anchor="nw",
    text="Date ",
    fill="#FFFFFF",
    font=("Inter Medium", 20 * -1)
)

button_image_1 = PhotoImage(
    file=relative_to_assets("button_1.png"))
max_rep_submit_button = Button(
    image=button_image_1,
    borderwidth=0,
    highlightthickness=0,
    command=lambda: print("max_rep submit clicked"),
    relief="flat"
)

canvas.create_text(
    432.0,
    176.0,
    anchor="nw",
    text="Both hands touching ceiling (1 minute).",
    fill="#FFFFFF",
    font=("Inter Medium", 20 * -1)
)

canvas.create_text(
    432.0,
    246.0,
    anchor="nw",
    text="Pushups",
    fill="#FFFFFF",
    font=("Inter Medium", 20 * -1)
)

canvas.create_text(
    551.0,
    246.0,
    anchor="nw",
    text="Pullups",
    fill="#FFFFFF",
    font=("Inter Medium", 20 * -1)
)

canvas.create_text(
    669.0,
    246.0,
    anchor="nw",
    text="Dips",
    fill="#FFFFFF",
    font=("Inter Medium", 20 * -1)
)

canvas.create_text(
    432.0,
    321.0,
    anchor="nw",
    text="Chinups",
    fill="#FFFFFF",
    font=("Inter Medium", 20 * -1)
)

canvas.create_text(
    610.0,
    323.0,
    anchor="nw",
    text="Squats",
    fill="#FFFFFF",
    font=("Inter Medium", 20 * -1)
)

entry_image_1 = PhotoImage(
    file=relative_to_assets("entry_1.png"))


entry_image_2 = PhotoImage(
    file=relative_to_assets("entry_2.png"))


entry_image_3 = PhotoImage(
    file=relative_to_assets("entry_3.png"))


entry_image_4 = PhotoImage(
    file=relative_to_assets("entry_4.png"))


entry_image_5 = PhotoImage(
    file=relative_to_assets("entry_5.png"))


entry_image_6 = PhotoImage(
    file=relative_to_assets("entry_6.png"))


entry_image_7 = PhotoImage(
    file=relative_to_assets("entry_7.png"))


entry_image_8 = PhotoImage(
    file=relative_to_assets("entry_8.png"))


entry_image_9 = PhotoImage(
    file=relative_to_assets("entry_9.png"))


canvas.create_text(
    432.0,
    393.0,
    anchor="nw",
    text="Plank Hold [min+s]",
    fill="#FFFFFF",
    font=("Inter Medium", 20 * -1)
)

week_entry = Entry(
    bd=0,
    bg="#D9D9D9",
    fg="#000716",
    highlightthickness=0
)
date_entry = Entry(
    bd=0,
    bg="#D9D9D9",
    fg="#000716",
    highlightthickness=0
)
ceiling_hands_entry = Entry(
    bd=0,
    bg="#D9D9D9",
    fg="#000716",
    highlightthickness=0
)
pushups_entry = Entry(
    bd=0,
    bg="#D9D9D9",
    fg="#000716",
    highlightthickness=0
)
pullups_entry = Entry(
    bd=0,
    bg="#D9D9D9",
    fg="#000716",
    highlightthickness=0
)
dips_entry = Entry(
    bd=0,
    bg="#D9D9D9",
    fg="#000716",
    highlightthickness=0
)
chinups_entry = Entry(
    bd=0,
    bg="#D9D9D9",
    fg="#000716",
    highlightthickness=0
)
squats_entry = Entry(
    bd=0,
    bg="#D9D9D9",
    fg="#000716",
    highlightthickness=0
)
plank_min_entry = Entry(
    bd=0,
    bg="#D9D9D9",
    fg="#000716",
    highlightthickness=0
)
plank_min_entry = Entry(
    bd=0,
    bg="#D9D9D9",
    fg="#000716",
    highlightthickness=0
)
plank_sec_entry = Entry(
    bd=0,
    bg="#D9D9D9",
    fg="#000716",
    highlightthickness=0
)


def get_data():
    if validate_empty(ceiling_hands_entry.get(), pushups_entry.get(), pullups_entry.get(), dips_entry.get(), chinups_entry.get(), squats_entry.get(), plank_min_entry.get(), plank_sec_entry.get()) == 1:
        messagebox.showerror("Error", "No Null Values,\nplease and thank you!")
    else:
        response = messagebox.askyesno("Confirm", f'Ceiling Hands: {ceiling_hands_entry.get()} | Pushups: {pushups_entry.get()}'
                                                  f'\nPullups: {pullups_entry.get()} | Dips: {dips_entry.get()},'
                                                  f'\nChinups: {chinups_entry.get()} | Squats: {squats_entry.get()} '
                                                  f'\nPlank: {plank_min_entry.get()}m {plank_sec_entry.get()}s, Correct?')
        if response:  # If user clicks "Yes"
            print(f'{date_entry.get()} | {week_entry.get()} | ceiling: {ceiling_hands_entry.get()} | pushups: {pushups_entry.get()}')
            print(f'pullups: {pullups_entry.get()} | dips: {dips_entry.get()} | chinups: {chinups_entry.get()} | squats: {squats_entry.get()} | plank: {plank_min_entry.get()}m {plank_sec_entry.get()}s')
            max_reps(ceiling_hands_entry.get(), pushups_entry.get(), pullups_entry.get(), dips_entry.get(), chinups_entry.get(), squats_entry.get(), plank_min_entry.get(), plank_sec_entry.get())
            messagebox.showinfo("Success", "Bidding accomplished!")
            reps_window.destroy()

        else:  # If user clicks "No"
            print(f'aborted')
            messagebox.showinfo("Cancelled", "Action cancelled!")


# Validation
ceiling_hands_entry.config(validate="key", validatecommand=vcmd["int"])
pushups_entry.config(validate="key", validatecommand=vcmd["int"])
pullups_entry.config(validate="key", validatecommand=vcmd["int"])
dips_entry.config(validate="key", validatecommand=vcmd["int"])
chinups_entry.config(validate="key", validatecommand=vcmd["int"])
squats_entry.config(validate="key", validatecommand=vcmd["int"])
plank_min_entry.config(validate="key", validatecommand=vcmd["int"])
plank_sec_entry.config(validate="key", validatecommand=vcmd["int"])


# Place all widgets at the bottom
canvas.place(x=0, y=0)
week_entry.place(x=432.0, y=138.0, width=119.0, height=26.0)
date_entry.place(x=624.0, y=138.0, width=116.0, height=26.0)
ceiling_hands_entry.place(x=432.0, y=202.0, width=326.0, height=28.0)
pushups_entry.place(x=432.0, y=275.0, width=89.0, height=26.0)
pullups_entry.place(x=551.0, y=275.0, width=89.0, height=26.0)
dips_entry.place(x=669.0, y=275.0, width=89.0, height=26.0)
chinups_entry.place(x=432.0, y=348.0, width=148.0, height=28.0)
squats_entry.place(x=610.0, y=348.0, width=148.0, height=28.0)
plank_min_entry.place(x=432.0, y=421.0, width=65.0, height=30.0)
plank_sec_entry.place(x=515.0, y=421.0, width=109.0, height=30.0)
max_rep_submit_button.place(x=474.0, y=470.0, width=240.0, height=80.0)

week_entry.delete(0, "end")
week_entry.insert(0, weeks_since(START_DATE))
week_entry.config(state="readonly")

date_entry.delete(0, "end")
date_entry.insert(0, todays_date())
date_entry.config(state="readonly")

max_rep_submit_button.config(command=get_data)

reps_window.resizable(False, False)
reps_window.mainloop()
