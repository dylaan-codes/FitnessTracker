# This GUI layout was generated by the Tkinter Designer by Parth Jadhav
# https://github.com/ParthJadhav/Tkinter-Designer
# GUI design and code by Dylan Nguyen
from FitnessTracker.my_functions import *
from FitnessTracker.my_validations import *
from pathlib import Path


# Explicit imports to satisfy Flake8
from tkinter import Tk, Toplevel, Canvas, Entry, Text, Button, PhotoImage, messagebox


OUTPUT_PATH = Path(__file__).parent
ASSETS_PATH = OUTPUT_PATH / Path("assets/frame1")


def relative_to_assets(path: str) -> Path:
    return ASSETS_PATH / Path(path)


bw_window = Tk()
bw_window.title("bodyweight form")
bw_window.geometry("800x600")
bw_window.configure(bg="#FFFFFF")
vcmd = get_vcmd(bw_window)

canvas = Canvas(
    bw_window,
    bg="#FFFFFF",
    height=600,
    width=800,
    bd=0,
    highlightthickness=0,
    relief="ridge"
)

canvas.create_rectangle(
    400.0,
    0.0,
    800.0,
    600.0,
    fill="#395271",
    outline=""
)

image_image_1 = PhotoImage(
    file=relative_to_assets("image_1.png"))
image_1 = canvas.create_image(
    200.0,
    300.0,
    image=image_image_1
)

canvas.create_text(
    409.0,
    11.0,
    anchor="nw",
    text="Body Weight Input Form",
    fill="#FFFFFF",
    font=("Inter Bold", 36 * -1)
)

canvas.create_text(
    432.0,
    107.0,
    anchor="nw",
    text="Day",
    fill="#FFFFFF",
    font=("Inter Medium", 20 * -1)
)

entry_image_1 = PhotoImage(
    file=relative_to_assets("entry_1.png"))
entry_bg_1 = canvas.create_image(
    491.5,
    152.0,
    image=entry_image_1
)


canvas.create_text(
    432.0,
    189.0,
    anchor="nw",
    text="Time of Day",
    fill="#FFFFFF",
    font=("Inter Medium", 20 * -1)
)

entry_image_2 = PhotoImage(
    file=relative_to_assets("entry_2.png"))
entry_bg_2 = canvas.create_image(
    491.5,
    234.0,
    image=entry_image_2
)


canvas.create_text(
    464.0,
    298.0,
    anchor="nw",
    text="Body Weight [KG]",
    fill="#FFFFFF",
    font=("Inter Medium", 20 * -1)
)

entry_image_3 = PhotoImage(
    file=relative_to_assets("entry_3.png"))
entry_bg_3 = canvas.create_image(
    596.0,
    343.0,
    image=entry_image_3
)


canvas.create_text(
    624.0,
    107.0,
    anchor="nw",
    text="Date ",
    fill="#FFFFFF",
    font=("Inter Medium", 20 * -1)
)

entry_image_4 = PhotoImage(
    file=relative_to_assets("entry_4.png"))
entry_bg_4 = canvas.create_image(
    682.0,
    152.0,
    image=entry_image_4
)


button_image_1 = PhotoImage(
    file=relative_to_assets("button_1.png"))
enter_bw_button = Button(
    image=button_image_1,
    borderwidth=0,
    highlightthickness=0,
    command=lambda: [print("bw submit clicked"), get_data()],
    relief="flat"
)

day_entry = Entry(
    bd=0,
    bg="#D9D9D9",
    fg="#000716",
    highlightthickness=0
)
date_entry = Entry(
    bd=0,
    bg="#D9D9D9",
    fg="#000716",
    highlightthickness=0
)
time_of_day_entry = Entry(
    bd=0,
    bg="#D9D9D9",
    fg="#000716",
    highlightthickness=0
)
weight_entry = Entry(
    bd=0,
    bg="#D9D9D9",
    fg="#000716",
    highlightthickness=0,
)

weight_entry.config(validate="key", validatecommand=vcmd["float"])
def get_data():
    if validate_empty(weight_entry.get()) == 1:
        messagebox.showerror("Error", "No Null Values,\nplease and thank you!")
    else:
        response = messagebox.askyesno("Confirm", f"{weight_entry.get()} KG, correct?")
        if response:  # If user clicks "Yes"
            messagebox.showinfo("Success", "Bidding accomplished!")
            print(f'body weight entry successful\n'
                  f'{date_entry.get()} | {day_entry.get()} | {weight_entry.get()} | {time_of_day_entry.get()}')
            body_weight(weight_entry.get())
            bw_window.destroy()

        else:  # If user clicks "No"
            print(f'aborted')
            messagebox.showinfo("Cancelled", "Action cancelled!")




# Place all elements at the bottom
canvas.place(x=0, y=0)
day_entry.place(x=432.0, y=138.0, width=119.0, height=26.0)
date_entry.place(x=624.0, y=138.0, width=116.0, height=26.0)
time_of_day_entry.place(x=432.0, y=220.0, width=119.0, height=26.0)
weight_entry.place(x=464.0, y=329.0, width=264.0, height=26.0)

day_text = count_day()

day_entry.delete(0, "end")
day_entry.insert(0, count_day())
day_entry.config(state="readonly")

date_entry.delete(0, "end")
date_entry.insert(0, todays_date())
date_entry.config(state="readonly")

time_of_day_entry.delete(0, "end")
time_of_day_entry.insert(0, time_of_day())
time_of_day_entry.config(state="readonly")

enter_bw_button.place(x=474.0, y=470.0, width=240.0, height=80.0)

bw_window.resizable(False, False)
bw_window.mainloop()
